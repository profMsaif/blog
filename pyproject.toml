[project]
name = "blog"
version = "0.1.0"
description = ""
authors = [
    {name = "profMsaif",email = "profmsaif@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "django (>=5.2,<6.0)",
    "starlette (>=0.46.2,<0.47.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "psycopg2 (>=2.9.10,<3.0.0)",
    "redis (>=6.1.0,<7.0.0)",
    "celery (>=5.5.2,<6.0.0)"
]

[tool.poetry]
packages = [{include = "blog", from = "src"}]


[tool.poetry.group.dev.dependencies]
flake8 = "^7.2.0"
black = "^25.1.0"
isort = "^6.0.1"
pre-commit = "^4.2.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
# addopts = '--fast' # may yield broken ast, but much faster
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | migrations
    | fixtures
    | scripts
    | docker
    | templates
  )/
)
'''
line-length = 120
target_version = ['py312']


[tool.isort]
known_third_party = ['analytics', 'apiclient', 'arabic_reshaper', 'arrow', 'asgiref', 'attr', 'authlib', 'aws_xray_sdk', 'backports', 'bcrypt', 'bidi', 'boto', 'boto3', 'botocore', 'cachetools', 'cfnlint', 'click', 'clover', 'coverage', 'dateutil', 'deepdiff', 'defusedxml', 'distlib', 'docker', 'doubles', 'ecdsa', 'encutils', 'et_xmlfile', 'examples', 'faker', 'fakeredis', 'flake8', 'flask', 'flask_cors', 'flask_graphql', 'flask_migrate', 'flask_script', 'flask_sqlalchemy', 'fpdf', 'future', 'geographiclib', 'google', 'google_auth_oauthlib', 'google_crc32c', 'googleapiclient', 'graphene', 'graphene_sqlalchemy', 'graphene_sqlalchemy_filter', 'graphql', 'graphql_relay', 'graphql_server', 'grpc', 'gspread', 'importlib_metadata', 'iniconfig', 'integration', 'iso8601', 'isodate', 'itsdangerous', 'jinja2', 'jose', 'jsondiff', 'jsonlines', 'jsonschema', 'junit_xml', 'libfuturize', 'libpasteurize', 'markupsafe', 'mixer', 'mock', 'moto', 'multidict', 'mypy', 'mypyc', 'mysql', 'mysqlx', 'nacl', 'natsort', 'networkx', 'oauth2client', 'oauthlib', 'olefile', 'OpenSSL', 'opentelemetry', 'packaging', 'paramiko', 'past', 'PIL', 'pip', 'poetry', 'pkg_resources', 'plaid', 'platformdirs', 'pluggy', 'premailer', 'promise', 'proto', 'ptvsd', 'pydocstyle', 'pyflakes', 'pygments', 'pygount', 'pymysql', 'PyPDF2', 'pyrsistent', 'pysftp', 'pytest', 'pytest_cov', 'pytz', 'redis', 'reportlab', 'requests', 'requests_oauthlib', 'requests_toolbelt', 'responses', 'rq', 'rq_scheduler', 'samtranslator', 'schematics', 'sentry_sdk', 'setuptools', 'snowballstemmer', 'sortedcontainers', 'splunk_otel', 'sqlalchemy', 'sqlalchemy_mixins', 'sqlalchemy_serializer', 'sqlalchemy_utils', 'sshpubkeys', 'tests', 'text_unidecode', 'thrift', 'tigershark', 'toml', 'typed_ast', 'uritemplate', 'vcr', 'virtualenv', 'wand', 'websocket', 'werkzeug', 'wheel', 'wrapt', 'xhtml2pdf', 'yaml', 'yarl', 'zeep', 'autopep8', 'cached_property', 'clonevirtualenv', 'easy_install', 'filelock', 'flask_env', 'flask_mail', 'google_auth_httplib2', 'jsonpatch', 'jsonpointer', 'LICENSE', 'mccabe', 'mypy_extensions', 'ordered_set', 'pycodestyle', 'requests_file', 'singledispatch_helpers', 'six', 'typing', 'typing_extensions', 'uwsgidecorators', 'xmltodict', 'zipp']
line_length = 120
profile = "black"
skip_gitignore = "True"
force_single_line = "True"